import mongoose from "mongoose"

/**
 *    user._id: id created by Mongoose, used within mongoDB
 *          id: id returned by Clerk. Use this id to query the user's data.
 */
const userSchema = new mongoose.Schema({
  id: { type: String, required: true },
  imageUrl: { type: String, required: true }, // avatar
  firstName: { type: String, required: true, trim: true },
  lastName: { type: String, trim: true },
  about: { type: String, trim: true },
  website: { type: String, trim: true },
  username: { type: String, required: true, unique: true, trim: true },

  created: [{ type: mongoose.Schema.Types.ObjectId, ref: "Pin" }],
  saved: [{ type: mongoose.Schema.Types.ObjectId, ref: "Pin" }],

  following: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],
  follower: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],

  hidePins: [{ type: mongoose.Schema.Types.ObjectId, ref: "Pin" }],
  blockUsers: [{ type: mongoose.Schema.Types.ObjectId, ref: "User" }],

  drafts: [
    {
      /*
          This _id is created on client side with a browser's API. Whan a draft is published,
        it becomes a Pin, and this _id will be replaced with a _id generated by mongoDB.
      */
      _id: { type: String, required: true },
      imageUrl: { type: String, required: true },
      expiredAt: { type: Number, required: true },
      title: { type: String, trim: true },
      description: { type: String, trim: true },
      link: { type: String, trim: true },
      imageSize: { width: Number, height: Number },
    },
  ],
})

// Prevent repetitive model creation
const User = mongoose.models.User || mongoose.model("User", userSchema)
export default User
